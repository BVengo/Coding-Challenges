library("rvest")
lapply(packages, library)
packages <- c("rvest", "magrittr", "data.table")
install.packages(setdiff(packages, rownames(installed.packages())))
lapply(packages, library)
library("rvest", "magrittr")
library(packages)
?lapply
lapply(packages, library, character.only = TRUE)
source('D:/Projects/Coding Challenges/Kattis/src/web/submit.R', echo=TRUE)
packages <- c("rvest", "magrittr", "data.table", "svDialogs")
install.packages(setdiff(packages, rownames(installed.packages())))
lapply(packages, library, character.only = TRUE)
command <- dlgInput("Enter a number", Sys.info()["user"])$res
command
command <- dlgInput("Enter a question. Add flags by prefixing them with --\n
Available flags:\n
--redo : Already completed (so in completed folder)")$res
command <- dlgInput("Enter a question. Add flags by prefixing them with --
Available flags:
--redo : Already completed (so in completed folder)")$res
command <- dlgInput("Enter a question, and add flags by prefixing them with --
Available flags:
--redo : Already completed (so in completed folder)")$res
command <- dlgInput("Enter a question. Add flags by prefixing them with --
Available flags:
--redo : Already completed (so in completed folder)")$res
command <- dlgInput("Enter a question. Add flags by prefixing them with --
Available flags:
--redo : Already completed (so in completed folder)")$res
command <-
dlgInput(paste("Enter a question. Add flags by prefixing them with --",
"Available flags:",
"--redo : Already completed (so in completed folder)"), sep = "\n")$res
command <-
dlgInput(paste("Enter a question. Add flags by prefixing them with --",
"Available flags:",
"--redo : Already completed (so in completed folder)", sep = "\n"))$res
command <-
dlgInput(paste("Enter a question. Add flags by prefixing them with --\n",
"Available flags:",
"--redo : Already completed (so in completed folder)", sep = "\n"))$res
cat(command)
command <-
dlgInput(paste("Enter a question. Add flags by prefixing them with --\n",
"Available flags:",
"--redo : Already completed (so in completed folder)", sep = "\n"))$res
command <-
dlgInput(paste("Enter a question name. Add flags by prefixing them with --\n",
"Available flags:",
"--redo : Already completed (so in completed folder)", sep = "\n"))$res
class(command)
command <-
dlgInput(paste("Enter a question name. Add flags by prefixing them with --\n",
"Available flags:",
"--redo : Already completed (so in completed folder)", sep = "\n"))$res
class(command)
length(command)
#while(!exists) {
input <-
dlgInput(paste("Enter a question name. Add flags by prefixing them with --\n",
"Available flags:",
"--redo : Already completed (so in completed folder)", sep = "\n"))$res
exists <- file.exists(paste0("../complete/", input, ".cpp"))
#while(!exists) {
input <-
dlgInput(paste("Enter a question name. Add flags by prefixing them with --\n",
"Available flags:",
"--redo : Already completed (so in completed folder)", sep = "\n"))$res
exists <- file.exists(paste0("../complete/", input, ".cpp"))
pass$text <- 0
login_args <- read.delim("kattisrc.txt")
login_args
View(login_args)
login_args <- read.csv("kattisrc.txt")
View(login.args)
View(login_args)
login_args <- read.delim2("kattisrc.txt")
login_args
View(login_args)
login_args <- read.delim("kattisrc.txt")
login_args
View(login_args)
View(credentials)
credentials <- read.delim("kattisrc.txt")
View(credentials)
credentials <- read.delim("kattisrc.txt")
credentials
View(credentials)
credentials[1]
credentials[[1]]
login_args$"hi"
login_args[hi] <- "lol"
login_args["hi"] <- "lol"
rm(login_args)
login_args <- list()
lapply(credentials[[1]], function(x) {
if(grepl(": ", c)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*:", "", x)
}
})
lapply(credentials[1], function(x) {
if(grepl(": ", c)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*:", "", x)
}
})
credentials[[1]][1]
credentials
View(credentials)
credentials[[1]]
credentials[[1]][1]
credentials[[1]][2]
credentials[[1]][3]
credentials[1]
credentials[1][1]
credentials[1,1]
credentials
credentials <- as.data.table(read.delim("kattisrc.txt"))
credentials
View(credentials)
?read.delim
credentials <- read.delim("kattisrc.txt")
credentials
credentials$X..Please.save.this.file.as..kattisrc.in.your.home.directory.[1]
credentials$X..Please.save.this.file.as..kattisrc.in.your.home.directory.[2]
credentials$X..Please.save.this.file.as..kattisrc.in.your.home.directory.[[1]]
credentials$X..Please.save.this.file.as..kattisrc.in.your.home.directory.[[[1]]]
credentials[1, 1]
credentials[0]
credentials[0, 1]
?factor
?delim
?read.delim
?read.delim
credentials <- read.delim("kattisrc.txt", header=F, sep="\n")
View(credentials)
credentials$V1[1]
credentials$V1[2]
View(credentials)
credentials <- read.delim("kattisrc.txt", header=F, sep="\n", stringsAsFactors=F)
View(Credentials)
credentials[1]
credentials[1][1]
credentials[1][1][1]
credentials$V1[1]
credentials$V1[2]
credentials$V1[3]
login_args <- list()
credentials <- read.delim("kattisrc.txt", header=F, stringsAsFactors=F)
credentials$V1[1]
credentials <- read.delim("kattisrc.txt", stringsAsFactors=F)
credentials$V1[1]
lapply(credentials[[1]], function(x) {
if(grepl(": ", c)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*:", "", x)
}
})
credentials <- read.delim("kattisrc.txt", header=F, stringsAsFactors=F)
login_args <- list()
lapply(credentials[[1]], function(x) {
if(grepl(": ", c)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*:", "", x)
}
})
credentials$V1
credentials$V1[3]
credentials$V1[4]
credentials$V1[5]
credentials$V1[6]
x <- credentials$V1[6]
gsub(":.*$", "", x)
gsub("^.*:", "", x)
y <- gsub(":.*$", "", x)
z <- gsub("^.*:", "", x)
y
z
login_args[y]
login_args
login_args <- c()
login_args[y]
login_args[y] <- z
login_args[y]
login_args <- c()
lapply(credentials[[1]], function(x) {
if(grepl(": ", c)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*: ", "", x)
}
})
credentials[1]
credentials[[1]]
credentials[[1]][1]
lapply(credentials[[1]], function(x) {
if(grepl(": ", x)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*: ", "", x)
}
})
login_args
x
rm(x)
lapply(credentials[[1]], function(x) {
if(grepl(": ", x)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*: ", "", x)
}
})
x$username
View(login_args)
rm(input)
rm(exists, command)
credentials <- read.delim("kattisrc.txt", header=F, stringsAsFactors=F)
login_args <- c()
lapply(credentials[[1]], function(x) {
if(grepl(": ", x)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*: ", "", x)
}
})
login_args
for(c in credentials[[1]]) {
if(grepl(": ", c)) {
login_args[gsub(":.*$", "", c)] <- gsub("^.*: ", "", c)
}
}
login_args
View(login_args)
login_args''
View(login_args)
login_args$kattis
login_args$hostname
login_args[hostname]
login_args["hostname"]
View(login_args)
packages <- c("httr")
install.packages(setdiff(packages, rownames(installed.packages())))
lapply(packages, library, character.only=T)
login_args["username"]
?httr::POST
packages <- c("httr")
install.packages(setdiff(packages, rownames(installed.packages())))
lapply(packages, library, character.only=T)
dir_complete <- "../complete"
dir_incomplete <- "../incomplete"
lang <- "C++"
ext <- ".cpp"
# Get personal access credentials
file <- read.delim("kattisrc.txt", header=F, stringsAsFactors=F)
credentials <- c()
for(x in file[[1]]) {
if(grepl(": ", x)) {
credentials[gsub(":.*$", "", x)] <- gsub("^.*: ", "", x)
}
}
rm(file)
login_args <- c(credentials["username"], credentials["token"])
View(login_args)
View(login_args)
View(credentials)
POST(credentials["hostname"])
?authenticate
?config
?set_cookies
?authenticate
?config
?POST
?config
login_args["username"]
POST(login_args["hostname"], config=config(authenticate(login_args["username"]), token = login_args["token"]))
?httr
?sign_oauth1.0
packages <- c("httr", "jsonlite")
install.packages(packages)
install.packages(setdiff(packages, rownames(installed.packages())))
lapply(packages, library, character.only=T)
dir_complete <- "../complete"
dir_incomplete <- "../incomplete"
lang <- "C++"
ext <- ".cpp"
# Get personal access credentials
file <- read.delim(".kattisrc", header=F, stringsAsFactors=F)
file
read_json(".kattisrc")
login_args <- c()
for(x in file[[1]]) {
if(grepl(": ", x)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*: ", "", x)
}
}
rm(file)
login_args
for(x in file[[1]]) {
if(grepl(": ", x)) {
login_args$sub(":.*$", "", x) <- gsub("^.*: ", "", x)
}
}
for(x in file[[1]]) {
if(grepl(": ", x)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*: ", "", x)
}
}
rm(file)
POST(login_args["hostname"], authenticate(login_args["username"], login_args["token"]))
GET(login_args["hostname"], authenticate(login_args["username"], login_args["token"]))
res <- GET(login_args["hostname"], authenticate(login_args["username"], login_args["token"]))
res
View(res)
res <- GET(login_args["hostname"], authenticate(login_args["username"], "lol"))
View(res)
res2 <- res
res <- GET(login_args["hostname"], authenticate(login_args["username"], login_args["token"]))
View(res)
View(res2)
?query()
?httr::query
?GET
?httr::GET
library(htt)
library(httr)
?httr::GET
packages <- c("httr", "jsonlite")
install.packages(packages)
install.packages(packages)
?httr::GET
?oauth1.token
?oauth1.0_token()
?httr::oauth1.0_token()
res <- GET(login_args["hostname"], config(token=login_args["token"]))
lapply(packages, library, character.only=T)
res <- GET(login_args["hostname"], config(token=login_args["token"]))
login_args["token"]
res <- GET(login_args["hostname"], config(token=login_args["token"]))
?config
login_args["token"][1]
login_args["token"]
test <- login_args["token"]
test
rm(test)
login_args <- list()
for(x in file[[1]]) {
if(grepl(": ", x)) {
login_args[gsub(":.*$", "", x)] <- gsub("^.*: ", "", x)
}
}
login_args <- data.frame("arg", "value")
login_args <- data.frame("arg", "value")
for(x in file[[1]]) {
if(grepl(": ", x)) {
login_args <-
rbind(login_args,
data.frame("arg" = gsub(":.*$", "", x), "value" = gsub("^.*: ", "", x)))
}
}
# Get personal access credentials
file <- read.delim(".kattisrc", header=F, stringsAsFactors=F)
login_args <- data.frame("arg", "value")
for(x in file[[1]]) {
if(grepl(": ", x)) {
login_args <-
rbind(login_args,
data.frame("arg" = gsub(":.*$", "", x), "value" = gsub("^.*: ", "", x)))
}
}
login_args
login_args <- data.frame("arg" = character(), "value" = character())
for(x in file[[1]]) {
if(grepl(": ", x)) {
login_args <-
rbind(login_args,
data.frame("arg" = gsub(":.*$", "", x), "value" = gsub("^.*: ", "", x)))
}
}
login_args
login_args$arg
?data.table
packages <- c("httr", "jsonlite", "data.table")
install.packages(setdiff(packages, rownames(installed.packages())))
lapply(packages, library, character.only=T)
?data.table
login_args <- data.table("arg" = character(), "value" = character())
for(x in file[[1]]) {
if(grepl(": ", x)) {
login_args <-
rbind(login_args,
data.table("arg" = gsub(":.*$", "", x), "value" = gsub("^.*: ", "", x)))
}
}
login_args
login_args[arg=="username"]
login_args[arg=="username", value]
res <- GET(login_args[arg=="hostname", value], config(token=login_args[arg=="token", value]))
login_args[arg=="token", value]
